plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta9'
}

group = 'org.example.bedepay'
version = '1.2'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")
    implementation 'org.xerial:sqlite-jdbc:3.49.1.0'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.2'
    implementation 'com.zaxxer:HikariCP:6.2.1'
}

// Настройка shadowJar
shadowJar {
    // Явное указание, что это основной артефакт
    archiveClassifier.set('')
    
    // Исключаем META-INF файлы от зависимостей
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    
    // Переименовываем пакеты, чтобы избежать конфликтов с другими плагинами
    relocate 'com.zaxxer.hikari', 'org.example.bedepay.chatLimit.libs.hikari'
    relocate 'org.sqlite', 'org.example.bedepay.chatLimit.libs.sqlite'
    relocate 'org.mariadb', 'org.example.bedepay.chatLimit.libs.mariadb'
}

// Указываем Gradle использовать shadowJar вместо обычного jar
artifacts {
    archives shadowJar
}

// Конфигурируем стандартную задачу jar, чтобы не создавать обычный jar-файл
jar {
    archiveClassifier.set('original')
    enabled = false
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Сделаем shadowJar задачей по умолчанию вместо jar
build.dependsOn shadowJar
